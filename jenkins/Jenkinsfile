pipeline {

    agent any
//     agent { label 'ensitech' }

    stages {

        // Première étape : cloner le code source depuis GitHub
        stage('Cloner le dépôt') {
            steps {
                sh 'rm -rf secure-traffic-analyzer-elk/'
                sh 'git clone --branch main https://github.com/nataliasviattseva/secure-traffic-analyzer-elk.git'
                // Spécifie l’URL du dépôt à cloner (à remplacer par ton dépôt)
//                 git url: 'https://github.com/nataliasviattseva/secure-traffic-analyzer-elk.git', branch: 'main'
            }
        }

        stage('Installer Docker Compose') {
            steps {
                sh '''
                    curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
                    chown -R jenkins /usr/bin/docker-compose
                    chmod +x /usr/bin/docker-compose
                    docker-compose --version
                '''
            }
        }

        // Deuxième étape : déploiement de la stack ELK
        stage('Déployer Stack ELK') {
            steps {
                // On se place dans le dossier contenant le fichier docker-compose
                    // Mise à jour des images à la dernière version disponible
                    // Lancement (ou redémarrage) des conteneurs de la stack ELK
                    sh '''
                        cd secure-traffic-analyzer-elk/elk
                        docker-compose pull
                        docker-compose up -d
                '''
            }
        }
    }
}

// pour lancer agent
// java -jar agent.jar -url http://localhost:8080/ -secret 247a41932461eca487280314a6ba73a0b584a4aac66cd5fb37ee4df55bf65d0b -name ensitech -webSocket -workDir "C:\ENSITECH\jenkins-agent"
